{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseURL","axios","get","then","response","data","object","post","id","delete","put","Filter","props","value","name","onChange","SearchChange","Notification","text","message","className","category","Persons","persons","serachName","deletePerson","filterPersons","filter","person","toLowerCase","includes","map","key","number","onClick","PersonFrom","onSubmit","add","PChange","num","NChange","type","App","useState","setPersons","useEffect","personService","newName","setNewName","newNum","setNewNumber","setResults","messageText","setMessage","event","target","preventDefault","newPerson","find","window","confirm","newObject","setTimeout","catch","error","returnPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"0OAEMA,EAAU,oCAsBD,EApBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB9B,EAfA,SAACC,GAEZ,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAACG,GAEZ,OADgBP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMS,IAAN,UAAaV,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCjBvCM,G,MAAS,SAACC,GAAD,OAAW,kDAAuB,2BAAOC,MAAOD,EAAME,KAAMC,SAAUH,EAAMI,kBAErFC,EAAe,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACrB,OAAoB,OAAjBA,EAAKC,QACC,KAGP,yBAAKC,UAAWF,EAAKG,UAAWH,IAI9BI,EAAU,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,aACjCC,EAAgBH,EACpB,OAAGC,GACDE,EAAgBH,EAAQI,QAAO,SAAAC,GAAM,OAAIA,EAAOd,KAAKe,cAAcC,SAASN,EAAWK,mBAClEE,KAAI,SAAAH,GAAM,OAAI,yBAAKI,IAAKJ,EAAOpB,IAAjB,IAAuBoB,EAAOd,KAA9B,IAAqCc,EAAOK,WAG1EP,EAAcK,KAAI,SAAAH,GAAM,OAC7B,yBAAKI,IAAKJ,EAAOpB,IACdoB,EAAOd,KADV,IACiBc,EAAOK,OACtB,4BAAQC,QAAS,kBAAMT,EAAaG,EAAOpB,MAA3C,eAKA2B,EAAa,SAACvB,GAClB,OACE,0BAAMwB,SAAUxB,EAAMyB,KAAtB,UACS,2BAAOxB,MAAOD,EAAME,KAAMC,SAAUH,EAAM0B,UACjD,6BAFF,YAGW,2BAAOzB,MAAOD,EAAM2B,IAAKxB,SAAUH,EAAM4B,UAClD,6BACA,4BAAQC,KAAK,UAAb,SAsGSC,EAjGH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTpB,EADS,KACAqB,EADA,KAEhBC,qBAAU,WACRC,IAAuB3C,MAAK,SAAAC,GAC1BwC,EAAWxC,QAEZ,IANa,MAQcuC,mBAAS,IARvB,mBAQTI,EARS,KAQAC,EARA,OASeL,mBAAS,IATxB,mBASTM,EATS,KASDC,EATC,OAUiBP,mBAAS,IAV1B,mBAUTnB,EAVS,KAUG2B,EAVH,OAWkBR,mBAChC,CAAExB,QAAS,KAAME,SAAU,OAZb,mBAWT+B,EAXS,KAWIC,EAXJ,KAoFhB,OACE,6BACE,kBAAC,EAAD,CAAcnC,KAAMkC,IACpB,yCACA,kBAAC,EAAD,CAAQtC,KAAMU,EAAYR,aAdH,SAACsC,GAAD,OAAWH,EAAWG,EAAMC,OAAO1C,UAe1D,yCACA,kBAAC,EAAD,CAAYwB,IA3EE,SAACiB,GACjBA,EAAME,iBAEN,IAAMC,EAAY,CAChB3C,KAAMiC,EACNd,OAAQgB,EACRjB,IAAKe,GAGP,GAAIxB,EAAQmC,MAAK,SAAA9B,GAAM,OAAIA,EAAOd,OAAS2C,EAAU3C,SACnD,GAAG6C,OAAOC,QAAP,UAAkBb,EAAlB,2EAAoG,CACrG,IAAMvC,EAAKe,EAAQmC,MAAK,SAAA9B,GAAM,OAAIA,EAAOd,OAAS2C,EAAU3C,QAAMN,GAC5DqD,EAAY,CAChB/C,KAAMiC,EACNd,OAAQgB,GAEVH,EAAqBtC,EAAIqD,GAAW1D,MAAK,SAAAC,GACvC,IAAMgD,EAAc,CAClBjC,QAAQ,sBAAD,OAAuBf,EAASU,KAAhC,wBAAoDV,EAAS6B,QACpEZ,SAAS,WAEXgC,EAAWD,EAAYjC,SACvB2C,YAAW,WAAOT,EAAW,2BAAID,GAAL,IAAkBjC,QAAQ,UAAS,KAC/D,IAAMsC,EAAYlC,EAAQI,QAAO,SAAAC,GAAM,OAAIA,EAAOpB,KAAOA,EAAKoB,EAASxB,KACvEwC,EAAWa,MACVM,OAAM,SAAAC,GACP,IAAMZ,EAAc,CAClBjC,QAAQ,GAAD,OAAI0C,EAAU/C,KAAd,+CACPO,SAAS,SAEXgC,EAAWD,EAAYjC,SACvB2C,YAAW,WAAOT,EAAW,2BAAID,GAAL,IAAkBjC,QAAQ,UAAS,cAKnE2B,EAAqBW,GAAWtD,MAAK,SAAA8D,GACnC,IAAMb,EAAc,CAClBjC,QAAQ,sBAAD,OAAwB8C,EAAanD,KAArC,wBAAyDmD,EAAahC,QAC7EZ,SAAU,WAEZgC,EAAWD,EAAYjC,SACvB2C,YAAW,WAAOT,EAAW,2BAAID,GAAL,IAAkBjC,QAAQ,UAAS,KAC/DyB,EAAWrB,EAAQ2C,OAAOD,IAC1BjB,EAAW,IACXE,EAAa,OACZa,OAAM,SAAAC,GACP,IAAMZ,EAAc,CAClBjC,QAAQ,GAAD,OAAI6C,EAAMlD,KAAV,+CACPO,SAAS,SAEXgC,EAAWD,EAAYjC,SACvB2C,YAAW,WAAOT,EAAW,2BAAID,GAAL,IAAkBjC,QAAQ,UAAS,SAuBrCL,KAAMiC,EAASR,IAAKU,EAAQX,QAlBjC,SAACgB,GAAD,OAAWN,EAAWM,EAAMC,OAAO1C,QAkB2B2B,QAjB9D,SAACc,GAAD,OAAWJ,EAAaI,EAAMC,OAAO1C,UAkB5D,uCACA,kBAAC,EAAD,CAASU,QAASA,EAASC,WAAYA,EAAYC,aAjB5B,SAACjB,GAC1B,IAAMoB,EAASL,EAAQmC,MAAK,SAAA1B,GAAG,OAAIA,EAAIxB,KAAOA,KAC1CmD,OAAOC,QAAP,iBAAyBhC,EAAOd,KAAhC,QACFgC,EAAqBtC,GAAIL,MAAK,SAAAC,GAC5BwC,EAAWrB,EAAQI,QAAO,SAAAC,GAAM,OAAIA,EAAOpB,KAAOA,cCrH1D2D,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.55ddc9c5.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseURL = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (object) => {\r\n    const request = axios.post(baseURL, object)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseURL}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, object) => {\r\n    const request = axios.put(`${baseURL}/${id}`, object)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport './index.css'\n\nconst Filter = (props) => <div>filter shown with <input value={props.name} onChange={props.SearchChange}/></div>\n\nconst Notification = ({text}) => {\n  if(text.message === null) {\n    return null\n  }\n  return (\n    <div className={text.category}>{text}</div>\n  )\n}\n\nconst Persons = ({persons, serachName, deletePerson}) => {\n  let filterPersons = persons\n  if(serachName) {\n    filterPersons = persons.filter(person => person.name.toLowerCase().includes(serachName.toLowerCase()))\n    return filterPersons.map(person => <div key={person.id}> {person.name} {person.number}</div>)\n  }\n  \n  return filterPersons.map(person => \n    <div key={person.id}> \n      {person.name} {person.number} \n      <button onClick={() => deletePerson(person.id)} >delete</button> \n    </div>\n  )\n}\n\nconst PersonFrom = (props) => {\n  return (\n    <form onSubmit={props.add}>\n      name : <input value={props.name} onChange={props.PChange} />\n      <br></br>\n      number : <input value={props.num} onChange={props.NChange} /> \n      <br></br>\n      <button type=\"submit\">add</button>\n    </form>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  useEffect(() => {\n    personService.getAll().then(response => {\n      setPersons(response)\n    })\n  }, [])\n\n  const [newName, setNewName] = useState('')\n  const [newNum, setNewNumber] = useState('')\n  const [serachName, setResults] = useState('')\n  const [messageText, setMessage] = useState(\n    { message: null, category: null }\n  )\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const newPerson = {\n      name: newName,\n      number: newNum,\n      key: newName\n    }\n    \n    if (persons.find(person => person.name === newPerson.name)) {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const id = persons.find(person => person.name === newPerson.name).id\n        const newObject = {\n          name: newName,\n          number: newNum\n        }\n        personService.update(id, newObject).then(response => {\n          const messageText = {\n            message:`Successfully added ${response.name} with number ${response.number}`, \n            category:'success'\n          }\n          setMessage(messageText.message)\n          setTimeout(() => {setMessage({...messageText, message:null})}, 5000)\n          const newPerson = persons.filter(person => person.id !== id ? person : response)\n          setPersons(newPerson)\n        }).catch(error => {\n          const messageText = {\n            message:`${newObject.name} has already been removed from the database`, \n            category:'error'\n          }\n          setMessage(messageText.message)\n          setTimeout(() => {setMessage({...messageText, message:null})}, 5000)\n        })\n      }\n    }\n    else {\n      personService.create(newPerson).then(returnPerson => {\n        const messageText = {\n          message: `Successfully added ${returnPerson.name} with number ${returnPerson.number}`,\n          category: 'success'\n        }\n        setMessage(messageText.message)\n        setTimeout(() => {setMessage({...messageText ,message:null})}, 5000)\n        setPersons(persons.concat(returnPerson))\n        setNewName('')\n        setNewNumber('')\n      }).catch(error => {\n        const messageText = {\n          message:`${error.name} has already been removed from the database`,\n          category:'error'\n        }\n        setMessage(messageText.message)\n        setTimeout(() => {setMessage({...messageText ,message:null})}, 5000)\n      })\n    }\n  }\n\n  const handlePersonChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleSearchChange = (event) => setResults(event.target.value)\n  const handleDeletePerson = (id) => {\n    const person = persons.find(key => key.id === id)\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      personService.remove(id).then(response => {\n        setPersons(persons.filter(person => person.id !== id))\n      })\n    }\n  }\n\n  return (\n    <div>\n      <Notification text={messageText} />\n      <h1>Phonebook</h1>\n      <Filter name={serachName} SearchChange={handleSearchChange} />\n      <h2>Add a new</h2>\n      <PersonFrom add={addPerson} name={newName} num={newNum} PChange={handlePersonChange} NChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} serachName={serachName} deletePerson={handleDeletePerson}/>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}